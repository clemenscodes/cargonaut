{
  "version": 1,
  "projects": {
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": [
              "apps/api/src/assets",
              "apps/api/src/package.json"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "libs/env/src/lib/environment.ts",
                  "with": "libs/env/src/lib/environment.prod.ts"
                }
              ]
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "configurations": {
            "production": {
              "buildTarget": "api:build:production"
            },
            "development": {
              "buildTarget": "api:build:development"
            }
          },
          "defaultConfiguration": "production"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": [
            "{options.outputFile}"
          ],
          "options": {
            "lintFilePatterns": [
              "apps/api/**/*.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/api"
          ],
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "compodoc": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx compodoc -p apps/api/tsconfig.doc.json -d dist/apps/api/docs/api/"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "api-interfaces": {
      "root": "libs/api-interfaces",
      "sourceRoot": "libs/api-interfaces/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": [
            "{options.outputFile}"
          ],
          "options": {
            "lintFilePatterns": [
              "libs/api-interfaces/**/*.ts"
            ]
          }
        }
      },
      "tags": []
    },
    "cargonaut": {
      "projectType": "application",
      "root": "apps/cargonaut",
      "sourceRoot": "apps/cargonaut/src",
      "prefix": "cargonaut",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/cargonaut",
            "index": "apps/cargonaut/src/index.html",
            "main": "apps/cargonaut/src/main.ts",
            "polyfills": "apps/cargonaut/src/polyfills.ts",
            "tsConfig": "apps/cargonaut/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/cargonaut/src/favicon.ico",
              "apps/cargonaut/src/assets",
              "apps/cargonaut/src/manifest.webmanifest"
            ],
            "styles": [
              "apps/cargonaut/src/styles.scss"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "apps/cargonaut/src/styles"
              ]
            },
            "scripts": [],
            "serviceWorker": true,
            "ngswConfigPath": "apps/cargonaut/ngsw-config.json"
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "libs/env/src/lib/environment.ts",
                  "with": "libs/env/src/lib/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "cargonaut:build:production",
              "proxyConfig": "apps/cargonaut/proxy.conf.json"
            },
            "development": {
              "browserTarget": "cargonaut:build:development",
              "proxyConfig": "apps/cargonaut/proxy.dev.conf.json"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "cargonaut:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/cargonaut/src/**/*.ts",
              "apps/cargonaut/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/cargonaut"
          ],
          "options": {
            "jestConfig": "apps/cargonaut/jest.config.js",
            "passWithNoTests": true
          }
        },
        "compodoc": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx compodoc -p apps/cargonaut/tsconfig.doc.json -d dist/apps/api/docs/cargonaut/"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "cargonaut-e2e": {
      "root": "apps/cargonaut-e2e",
      "sourceRoot": "apps/cargonaut-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/cargonaut-e2e/cypress.json",
            "devServerTarget": "cargonaut:serve:development"
          },
          "configurations": {
            "production": {
              "devServerTarget": "cargonaut:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": [
            "{options.outputFile}"
          ],
          "options": {
            "lintFilePatterns": [
              "apps/cargonaut-e2e/**/*.{js,ts}"
            ]
          }
        }
      },
      "tags": [],
      "implicitDependencies": [
        "cargonaut"
      ]
    },
    "env": {
      "projectType": "library",
      "root": "libs/env",
      "sourceRoot": "libs/env/src",
      "prefix": "cargonaut",
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/env"
          ],
          "options": {
            "jestConfig": "libs/env/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/env/src/**/*.ts",
              "libs/env/src/**/*.html"
            ]
          }
        }
      },
      "tags": []
    }
  }
}
